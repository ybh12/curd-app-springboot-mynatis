<?xml version="1.0" encoding="UTF-8"?>
<!-- configure.status 为设置日志输出级别，级别如下：OFF 、FATAL 、ERROR、WARN、INFO、DEBUG、TRACE 、ALL  -->
<!-- <configuration scan="true" scanPeriod="60 seconds" debug="false"> -->
<configuration debug="false">

    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <springProperty scope="context" name="LOG_ROOT_PATH" source="logHome.dirPath"/>
    <springProperty scope="context" name="LOG_SERVICE_NAME" source="spring.application.name"/>

    <property name="TRACE_FILE_NAME" value="trace" />
    <property name="ERROR_FILE_NAME" value="error" />
    <property name="WARN_FILE_NAME" value="warn" />
    <property name="INFO_FILE_NAME" value="info" />
    <property name="DEBUG_FILE_NAME" value="debug" />
    <property name="PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS}  %-5level ${PID} --- [%15(%thread)] %-45(%logger{45}) : %msg%n"/>
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}  %green(%-5level) %magenta(${PID}) --- [%15(%thread)] %cyan(%-45(%logger{45})) : %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="TraceLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_ROOT_PATH}/${LOG_SERVICE_NAME}/${TRACE_FILE_NAME}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>120</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${PATTERN}</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <appender name="InfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <!-- <FileNamePattern>${LOG_HOME}/${INFO_FILE_NAME}.%d{yyyy-MM-dd}.log</FileNamePattern> -->
            <FileNamePattern>${LOG_ROOT_PATH}/${LOG_SERVICE_NAME}/${INFO_FILE_NAME}.%d{yyyy-MM-dd}.log</FileNamePattern>

            <!--日志文件保留天数-->
            <MaxHistory>120</MaxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${PATTERN}</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <appender name="DebugLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_ROOT_PATH}/${LOG_SERVICE_NAME}/${DEBUG_FILE_NAME}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>120</MaxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${PATTERN}</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <appender name="WarnLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_ROOT_PATH}/${LOG_SERVICE_NAME}/${WARN_FILE_NAME}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>120</MaxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${PATTERN}</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <appender name="ErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_ROOT_PATH}/${LOG_SERVICE_NAME}/${ERROR_FILE_NAME}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>120</MaxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${PATTERN}</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 输出日志信息到文件  -->

    <!--<appender name="sql" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>log/sql.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>log/sql-%d{yyyyMMdd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %class.%method - %msg%n</pattern>
        </encoder>
    </appender>

    &lt;!&ndash;输出所有日志到文件  &ndash;&gt;
    <logger name="com.mc.web.application" level="DEBUG" />

    &lt;!&ndash;打印com.alibaba.dubbo包下日志 (打印sql),此logger虽然没有指定appender，但是他的上级root已经指定了，所有他会把信息交给上级 &ndash;&gt;
    <logger name="com.mc.web.application.dao" level="DEBUG" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="sql"/>
    </logger>-->

    <!-- 日志输出级别 -->
  <!--  <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="TraceLog"/>
        &lt;!&ndash;        <appender-ref ref="DebugLog"/>&ndash;&gt;
        <appender-ref ref="InfoLog"/>
        <appender-ref ref="WarnLog"/>
        <appender-ref ref="ErrorLog"/>
    </root>-->


</configuration>
